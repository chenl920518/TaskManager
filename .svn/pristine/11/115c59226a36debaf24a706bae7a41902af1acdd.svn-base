<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.hnust.dao.QualityReportMapper">
  <resultMap id="BaseResultMap" type="com.cn.hnust.pojo.QualityReport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="project_no" jdbcType="VARCHAR" property="projectNo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, status, type, pic_url, createTime, user, project_no
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from quality_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="selectByProjectNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from quality_report
    where project_no = #{projectNo,jdbcType=VARCHAR} order by createTime desc
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quality_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.hnust.pojo.QualityReport">
    insert into quality_report (id, status, type, 
      pic_url, createTime, user, 
      project_no)
    values (#{id,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{picUrl,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{user,jdbcType=VARCHAR}, 
      #{projectNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.QualityReport" useGeneratedKeys="true" keyProperty="id">
    insert into quality_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="projectNo != null">
        project_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null">
        #{projectNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.QualityReport">
    update quality_report
    <set>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null">
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null">
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.QualityReport">
    update quality_report
    set status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      user = #{user,jdbcType=VARCHAR},
      project_no = #{projectNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
 
</mapper>