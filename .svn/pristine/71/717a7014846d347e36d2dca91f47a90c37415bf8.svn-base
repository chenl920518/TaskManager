	package com.cn.hnust.controller;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cn.hnust.pojo.Project;
import com.cn.hnust.pojo.ProjectERP;
import com.cn.hnust.pojo.User;
import com.cn.hnust.service.IProjectERPService;
import com.cn.hnust.service.IProjectService;
import com.cn.hnust.service.IUserService;
import com.cn.hnust.util.IdGen;

/**
 * CRM项目Controller
 * 
 * @author Administrator
 *
 */
@Controller
@RequestMapping("/project")
public class ProjectERPController {

	@Autowired
	private IProjectERPService projectERPService;
	
	@Autowired 
	private IProjectService projectService;
	
	@Autowired
	private IUserService userService;
	
	/**
	 * 同步ERP数据(项目信息)
	 * 
	 * @param request
	 * @param response
	 */
	@RequestMapping(value = "/synchERPProject", method = RequestMethod.POST)
	@ResponseBody
	public String updateCRMProject(HttpServletRequest request,HttpServletRequest response,@RequestParam Map<String,String> map)
			throws Exception {
		 String jsonStr = map.get("EmailClient");
		  
//		    BufferedReader reader = null;
//		    String jsonStr = "";
//			reader = new BufferedReader(new FileReader("C:\\Users\\Administrator\\Desktop\\1.text"));
//			String tempString = "";
//
//			int line = 1;
//		
//			while ((tempString = reader.readLine()) != null) {
//				jsonStr+=tempString;
//				line++;
//			}
		
		 JSONArray json = JSONArray.fromObject(jsonStr);
		 // 首先把字符串转成 JSONArray  对象
		 if(json.size()>0){
		  for(int i=0;i<json.size();i++){
		    JSONObject obj = json.getJSONObject(i);  // 遍历 jsonarray 数组，把每一个对象转成 json 对象
		    String projectNo = (String) obj.get("caseNo");
		    String projectNameC=""; 
		    
		    if(obj.get("projectDescc")!="" && obj.get("projectDescc")!=null){
		    	projectNameC = obj.get("projectDescc").toString();
		    }
		    
		    String projectNameE="";
		    if(obj.get("projectDesce")!="" && obj.get("projectDesce")!=null){
		    	projectNameE =obj.get("projectDesce").toString();
		    }
		    
		    String zhijian1="";
		    if(obj.get("zhijian1")!="" && obj.get("zhijian1")!=null){
		    	zhijian1 = obj.get("zhijian1").toString();
		    }
            
		    String zhijian2="";
		    if(obj.get("zhijian2")!="" && obj.get("zhijian2")!=null){
		    	zhijian2 = obj.get("zhijian2").toString();
		    }
	        
		    String customerManager="";
		    if(obj.get("customerManager")!="" && obj.get("customerManager")!=null){
		    	customerManager =obj.get("customerManager").toString();
		    }
		    
		    String merchandManager1="";
		    if(obj.get("merchandManager1")!="" && obj.get("merchandManager1")!=null){
		    	merchandManager1 = obj.get("merchandManager1").toString();
		    }
		    
		    String merchandManager2="";
		    if(obj.get("merchandManager2")!="" && obj.get("merchandManager2")!=null){
		    	merchandManager2 =obj.get("merchandManager2").toString();
		    }
            
		    String engineer1="";
		    if(obj.get("engineer1")!="" && obj.get("engineer1")!=null){
		    	engineer1 = obj.get("engineer1").toString();
		    }
		    
		    String engineer2="";
		    if(obj.get("engineer2")!="" && obj.get("engineer2")!=null){
		    	engineer2 =obj.get("engineer2").toString();
		    }
		    
		    String engineer3="";
		    if(obj.get("engineer1")!="" && obj.get("engineer3")!=null){
		    	engineer3 = obj.get("engineer3").toString();
		    } 
		    
		    String companyName="";
		    if(obj.get("factoryName")!="" && obj.get("factoryName")!=null){
		    	companyName = obj.get("factoryName").toString();
		    } 
		    
		    String plantAnalysis="";
		    if(obj.get("plantAnalysis")!="" && obj.get("plantAnalysis")!=null){
		    	plantAnalysis = obj.get("plantAnalysis").toString();
		    } 
		    
		    String projectMaterialProperties="";
		    if(obj.get("projectMaterialProperties")!="" && obj.get("projectMaterialProperties")!=null){
		    	projectMaterialProperties = obj.get("projectMaterialProperties").toString();
		    } 
		    
		    
			ProjectERP project = new ProjectERP();
			project.setId(IdGen.uuid());
			project.setProjectNo(projectNo);
			project.setProjectNameC(projectNameC);
	        project.setProjectNameE(projectNameE);
	        project.setZhijian1(zhijian1);
	        project.setZhijian2(zhijian2);
	        project.setCustomerManager(customerManager);
	        project.setMerchandManager1(merchandManager1);
	        project.setMerchandManager2(merchandManager2);
	        project.setEngineer1(engineer1);
	        project.setEngineer2(engineer2);
			project.setEngineer3(engineer3);
			project.setCompanyName(companyName);
			project.setPlantAnalysis(Integer.parseInt(plantAnalysis));
			project.setProjectMaterialProperties(Integer.parseInt(projectMaterialProperties));
			
			
		    ProjectERP projectErp=projectERPService.selectProjectErpByNo(project.getProjectNo());
			if(projectErp == null){
				projectERPService.addProjectERP(project);
			}else{
				projectERPService.updateProjectErp(project);
			}
			
			//查询插入的项目是否存在
			Project projectInfo=projectService.selectProjectByProjectNo(project.getProjectNo());
			if(projectInfo!=null){//存在就更新
				Project updateProject=new Project();
				User user=new User();
				User purchaseUser =new User();
				if(StringUtils.isNotBlank(project.getMerchandManager1())){
					user=userService.selectUserByName(project.getMerchandManager1());
					if(user!=null){
						updateProject.setEmailUserId(user.getId());
			    	}
				}
				if(StringUtils.isNoneBlank(project.getMerchandManager2())){
					purchaseUser=userService.selectUserByName(project.getMerchandManager2());
					if(purchaseUser!=null){
						updateProject.setPurchaseId(purchaseUser.getId());
			    	}	
				}
				updateProject.setProjectNo(project.getProjectNo());
				updateProject.setCompanyName(project.getCompanyName());
				updateProject.setPlantAnalysis(project.getPlantAnalysis());
				updateProject.setProjectMaterialProperties(project.getProjectMaterialProperties());
				projectService.updateProjectInfo(updateProject);
			}else{//不存在就插入操作
				Project insertProject=new Project();
				User user=new User();
				User purchaseUser =new User();
				//1.MerchandManager1 跟单销售,MerchandManager2 采购
				if(StringUtils.isNotBlank(project.getMerchandManager1())){
					user=userService.selectUserByName(project.getMerchandManager1());
					if(user!=null){
						insertProject.setEmailUserId(user.getId());
			    	}
				}
				if(StringUtils.isNotBlank(project.getMerchandManager2())){
					purchaseUser=userService.selectUserByName(project.getMerchandManager2());
					if(purchaseUser!=null){
						insertProject.setPurchaseId(purchaseUser.getId());
			    	}	
				}
				insertProject.setId(IdGen.uuid());
			    insertProject.setProjectNo(project.getProjectNo());
			    insertProject.setProjectName(project.getProjectNameC());
			    insertProject.setDeliveryDate(null); //交期
			    insertProject.setDeliveryStatus(0);
			    insertProject.setWarningStatus(0);
			    insertProject.setImportance(0);
			    insertProject.setFinish(0);
			    insertProject.setStage(0);
			    insertProject.setPoDate(null);  //PO日期
			    insertProject.setActualStartDate(null);  //原定交货日期
			    insertProject.setScheduledDate(null);  //实际开工日期
			    insertProject.setCompanyName(project.getCompanyName());
			    insertProject.setCreateDate(new Date());
			    insertProject.setPlantAnalysis(project.getPlantAnalysis());
			    insertProject.setProjectMaterialProperties(project.getProjectMaterialProperties());
			    projectService.addProject(insertProject);
			}
		  }
		 }
		 return "YES";
	}
}
