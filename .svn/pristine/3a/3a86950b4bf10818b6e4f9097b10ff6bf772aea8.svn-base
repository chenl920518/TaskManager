package com.cn.hnust.service.impl.task;

import java.util.Date;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import com.cn.hnust.pojo.Project;
import com.cn.hnust.pojo.ProjectReport;
import com.cn.hnust.service.IProjectReportService;
import com.cn.hnust.service.IProjectService;

@Component
public class ProjectDateTask {
	@Autowired
	private IProjectService projectService;
	
	@Autowired
	private IProjectReportService projectReportService;
	@Scheduled(cron = "0 0/10 8,23 * * ?")
	//@Scheduled(cron="0 41 15 * * ?")  
	public void work() throws Exception{
       syncProjectDate();
	}
    //定时任务定时更新数据库排序字段优先级和状态
	@Transactional
	public void syncProjectDate() throws Exception{
			List<Project> projectList=projectService.selectAllProject();// 项目列表	SHS18418
			//添加排序字段,最终根据排序字段进行排序
			int sortField=0;
			int projectStatus=0;
			Date today = new Date();
			for (Project sortProject : projectList) {
				if (sortProject.getFinish() == 0) {//大货没有完结
					if (sortProject.getIsPause() == null|| "0".equals(sortProject.getIsPause())) {
						List<ProjectReport> pr = projectReportService.selectProjectReport(sortProject.getProjectNo());
						 /* and (finish =0 and sample_finish =0 and (is_pause = 0 or is_pause is null ) 
								  and weekReportNum=0 and delivery_date is null and sample_scheduled_date is null) */
						if(sortProject.getSampleFinish()==0 && pr.size()==0 && 
								sortProject.getDeliveryDate() == null && sortProject.getSampleScheduledDate()==null){
							sortField = 1;  
							projectStatus=0;
						}
						//正在进行的项目判断
						/*<!-- 1. 样品交期，大货交期 (大货为空 样品交期不为为空样品 大于当前时间,样品为空,大货不为空 大货交期大于当前时间 ,样品大货不为空都大于)
						2.样品交期完结(大货交期为空 或者大货交期大于 当前时间) 3.新立项项目更新了周报，在正常项目里面 -->*/
						/* AND ( (finish =0 and sample_finish =0 and (is_pause = 0 or is_pause is null ) and weekReportNum &gt; 0 and delivery_date is null and sample_scheduled_date is null)
							     or(finish =0 and sample_finish =0 and (is_pause = 0 or is_pause is null ) and ((delivery_date is NULL and sample_scheduled_date!= '' and sample_scheduled_date &gt; now())
							     or(sample_scheduled_date is NULL and delivery_date!= '' and delivery_date &gt; now())
							     or(sample_scheduled_date != '' and delivery_date != '' and delivery_date &gt; now()))) 
							     or(sample_finish=1 and finish =0 and ((delivery_date is null)or(delivery_date!='' and delivery_date &gt; now()))
							  ))*/
						if((sortProject.getFinish()==0 && sortProject.getSampleFinish() ==0 &&   pr.size()> 0 && sortProject.getDeliveryDate()==null && sortProject.getSampleScheduledDate()== null)
							     ||(sortProject.getFinish()==0 && sortProject.getSampleFinish() ==0  && ((sortProject.getDeliveryDate()==null &&  sortProject.getSampleScheduledDate()!=null && sortProject.getSampleScheduledDate().getTime()+7*24*60*60*1000>today.getTime())
							     ||(sortProject.getSampleScheduledDate()==null && sortProject.getDeliveryDate()!=null && sortProject.getDeliveryDate().getTime()+7*24*60*60*1000>today.getTime())
							     ||(sortProject.getSampleScheduledDate()!=null && sortProject.getDeliveryDate()!=null && sortProject.getDeliveryDate().getTime()+7*24*60*60*1000>today.getTime()))) 
							     ||(sortProject.getSampleFinish()==1 && sortProject.getFinish()==0 && ((sortProject.getDeliveryDate()==null)||(sortProject.getDeliveryDate()!=null && sortProject.getDeliveryDate().getTime()+7*24*60*60*1000>today.getTime()))
							  )){
							sortField = 2;
							projectStatus=1;
						}
						
						 /*<!-- 延期项目(样品延期,大货延期) DATE_ADD(delivery_date,INTERVAL 7 DAY) < now()-->
					      and ((finish =0 and (is_pause = 0 or is_pause is null ) and delivery_date!= '' and DATE_ADD(delivery_date,INTERVAL 7 DAY) &lt; now())
					         or(delivery_date is NULL AND sample_finish =0 and (is_pause = 0 or is_pause is null ) and sample_scheduled_date!= '' and DATE_ADD(sample_scheduled_date,INTERVAL 7 DAY) &lt; now())
					         or(sample_finish=1 and finish=0 and (is_pause = 0 or is_pause is null )and delivery_date!= '' and DATE_ADD(delivery_date,INTERVAL 7 DAY) &lt; now()))
					    */
						if((sortProject.getFinish()==0 &&  sortProject.getDeliveryDate()!=null && sortProject.getDeliveryDate().getTime()+7*24*60*60*1000<today.getTime())
						         || (sortProject.getDeliveryDate()==null && sortProject.getSampleFinish() ==0  &&  sortProject.getSampleScheduledDate()!=null && sortProject.getSampleScheduledDate().getTime()+7*24*60*60*1000< today.getTime())
						         || (sortProject.getSampleFinish()==1 && sortProject.getFinish()==0  &&  sortProject.getDeliveryDate()!=null && sortProject.getDeliveryDate().getTime()+7*24*60*60*1000< today.getTime())){
								if(pr!=null &&pr.size()>0){//延期更新了周报
	                           	 sortField = 4; 
	                            }else{
	                           	 sortField = 3; 
	                            } 
	                            projectStatus=3;
						}
				 }else if(sortProject.getIsPause()!=null && !sortProject.getIsPause().equals("0")){
					 if((sortProject.getFinish()==0 && sortProject.getIsPause().equals("1")) ||
							 (sortProject.getSampleFinish()==0 && sortProject.getIsPause().equals("1")) ||
							 (sortProject.getSampleFinish()==1 && sortProject.getFinish() ==0 && sortProject.getIsPause().equals("1"))){
						 sortField = 5; 
						 projectStatus=4;
						 
					 }
					 if((sortProject.getFinish()==0 && sortProject.getIsPause().equals("2")) ||
							 (sortProject.getSampleFinish()==0 && sortProject.getIsPause().equals("2")) ||
							 (sortProject.getSampleFinish()==1 && sortProject.getFinish() ==0 && sortProject.getIsPause().equals("2"))){
						 sortField = 6; 
						 projectStatus=5;
						 
					 }
				  }
				} else if (sortProject.getFinish() == 1) {
					sortField = 7; 
					projectStatus=2;
				}
				sortProject.setSortField(sortField);
				sortProject.setProjectStatus(projectStatus);
				projectService.updateProjectDataSortField(sortProject);
			}
		}
	}
